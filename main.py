# -*- coding: utf-8 -*-

from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.properties import StringProperty
from kivy.uix.popup import Popup
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
import random as rd


class FestScreen(BoxLayout):
    output = StringProperty("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É, —â–æ–± –ø–æ—á–∞—Ç–∏ —Å–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è")

    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.rests = [
            "ChiliPizza", "ProntoPizza", "McDonald's", "RoyalHamburger",
            "–ü–µ–ª—å–º–µ–Ω—ñ&–í–∞—Ä–µ–Ω–∏–∫–∏", "KFC", "–î–æ–º–∞—à–Ω—è —Ä–µ–¥–∞–∫—Ü—ñ—è", "New York Street Pizza"
        ]
        self.reset_fest()

    def reset_fest(self):
        self.total = 0
        self.current_step = 0
        self.used_rests = []
        self.dishes_to_enter = []
        self.current_dish_index = 0
        self.rest_mode = rd.choice(["2 –Ω–∞ –≤–∏–±—ñ—Ä", "1 –±–µ–∑ –≤–∏–±–æ—Ä—É", "–≤—ñ–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä"])
        self.dish_mode = rd.choice(["–≤–∏–±—ñ—Ä–∫–æ–≤–æ", "–≤—Å—ñ"])
        self.n_rests = rd.choice([4, 5])
        self.next_restaurant = None
        self.output = (f"–†–µ–∂–∏–º –∑–∞–∫–ª–∞–¥—ñ–≤: [b]{self.rest_mode}[/b]\n"
                       f"–†–µ–∂–∏–º —Å—Ç—Ä–∞–≤: [b]{self.dish_mode}[/b]\n"
                       f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–∫–ª–∞–¥—ñ–≤ –∑–∞ –¥–µ–Ω—å: [b]{self.n_rests}[/b]\n\n"
                       "–ù–∞—Ç–∏—Å–Ω–∏ '–ù–∞—Å—Ç—É–ø–Ω–∏–π –∑–∞–∫–ª–∞–¥' —â–æ–± –ø–æ—á–∞—Ç–∏.")

    def next_step(self):
        # –Ø–∫—â–æ –∑–∞—Ä–∞–∑ –≤–≤—ñ–¥ —Ü—ñ–Ω - –Ω–µ –º–æ–∂–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–∏ –¥–∞–ª—ñ
        if self.dishes_to_enter and self.current_dish_index < len(self.dishes_to_enter):
            self.output = "–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç—Ä–∞–≤–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –¥–∞–ª—ñ."
            return

        if self.current_step >= self.n_rests:
            self.output = f"[b]–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å:[/b] {self.total:.2f} –≥—Ä–Ω\nüéä –°–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
            return

        self.current_step += 1

        available = [r for r in self.rests if r not in self.used_rests]
        if not available:
            self.used_rests = []
            available = self.rests[:]

        if self.rest_mode == "1 –±–µ–∑ –≤–∏–±–æ—Ä—É":
            rest = rd.choice(available)
        elif self.rest_mode == "2 –Ω–∞ –≤–∏–±—ñ—Ä":
            if len(available) >= 2:
                options = rd.sample(available, 2)
            else:
                options = available
            # –í–∏–≤–µ–¥–µ–º–æ –≤–∏–±—ñ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —á–µ—Ä–µ–∑ popup
            self.show_rest_choice_popup(options)
            return
        else:  # –≤—ñ–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä
            self.show_rest_choice_popup(available)
            return

        self.process_restaurant(rest)

    def process_restaurant(self, rest):
        self.next_restaurant = rest
        self.used_rests.append(rest)
        self.show_input_popup(self.get_dish_count, rest)

    def show_rest_choice_popup(self, options):
        content = BoxLayout(orientation='vertical', padding=10, spacing=10)
        label = Label(text="–û–±–µ—Ä—ñ—Ç—å –∑–∞–∫–ª–∞–¥:")
        content.add_widget(label)

        for opt in options:
            btn = Button(text=opt, size_hint_y=None, height=40)
            btn.bind(on_release=lambda btn: self.on_rest_choice(btn.text, popup))
            content.add_widget(btn)

        popup = Popup(title="–í–∏–±—ñ—Ä –∑–∞–∫–ª–∞–¥—É", content=content,
                      size_hint=(0.7, 0.7), auto_dismiss=False)
        self.rest_choice_popup = popup
        popup.open()

    def on_rest_choice(self, choice, popup):
        popup.dismiss()
        self.process_restaurant(choice)

    def show_input_popup(self, callback, rest_name):
        content = BoxLayout(orientation='vertical', padding=10, spacing=10)
        ti = TextInput(text='', multiline=False, input_filter='int', hint_text='–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ')
        btn_ok = Button(text='OK', size_hint_y=None, height=40)

        content.add_widget(Label(text=f"–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—Ä–∞–≤ –¥–ª—è –∑–∞–∫–ª–∞–¥—É '{rest_name}':"))
        content.add_widget(ti)
        content.add_widget(btn_ok)

        popup = Popup(title='–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—Ä–∞–≤',
                      content=content,
                      size_hint=(0.7, 0.4),
                      auto_dismiss=False)

        def on_ok(instance):
            try:
                val = int(ti.text)
                if val < 0:
                    raise ValueError()
                popup.dismiss()
                callback(val)
            except:
                ti.text = ''
                self.output = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–µ —á–∏—Å–ª–æ (0 –∞–±–æ –±—ñ–ª—å—à–µ)."

        btn_ok.bind(on_press=on_ok)
        popup.open()

    def get_dish_count(self, n):
        rest_name = self.next_restaurant
        if n == 0:
            self.output = f"–£ –∑–∞–∫–ª–∞–¥—ñ '{rest_name}' –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ.\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ù–∞—Å—Ç—É–ø–Ω–∏–π –∑–∞–∫–ª–∞–¥', —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏."
            return

        if self.dish_mode == "–≤—Å—ñ":
            dishes = list(range(1, n + 1))
        else:
            n_dish = rd.randint(0, n)
            # –ú–æ–∂—É—Ç—å –±—É—Ç–∏ –ø–æ–≤—Ç–æ—Ä–∏, –≤–∏–±—ñ—Ä –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö —Å—Ç—Ä–∞–≤ —ñ–∑ –∑–∞–º—ñ–Ω–æ—é
            dishes = [rd.randint(1, n) for _ in range(n_dish)]

        self.dishes_to_enter = dishes
        self.current_dish_index = 0

        self.output = (f"–ó–∞–∫–ª–∞–¥ '{rest_name}'\n"
                       f"–û–±—Ä–∞–Ω—ñ —Å—Ç—Ä–∞–≤–∏: {dishes}\n"
                       f"–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É –¥–ª—è —Å—Ç—Ä–∞–≤–∏ ‚Ññ{self.dishes_to_enter[self.current_dish_index]}")

        self.show_price_popup(rest_name)

    def show_price_popup(self, rest_name):
        content = BoxLayout(orientation='vertical', padding=10, spacing=10)
        ti = TextInput(text='', multiline=False, input_filter='float', hint_text='–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É')
        btn_ok = Button(text='OK', size_hint_y=None, height=40)

        current_dish = self.dishes_to_enter[self.current_dish_index]

        content.add_widget(Label(text=f"–¶—ñ–Ω–∞ –¥–ª—è —Å—Ç—Ä–∞–≤–∏ ‚Ññ{current_dish} –≤ –∑–∞–∫–ª–∞–¥—ñ '{rest_name}':"))
        content.add_widget(ti)
        content.add_widget(btn_ok)

        popup = Popup(title='–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É',
                      content=content,
                      size_hint=(0.7, 0.4),
                      auto_dismiss=False)

        def on_ok(instance):
            try:
                c = float(ti.text)
                if c < 0:
                    raise ValueError()
                popup.dismiss()
                self.total += c
                self.current_dish_index += 1
                if self.current_dish_index < len(self.dishes_to_enter):
                    self.output = (f"–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É –¥–ª—è —Å—Ç—Ä–∞–≤–∏ ‚Ññ{self.dishes_to_enter[self.current_dish_index]} "
                                   f"–≤ –∑–∞–∫–ª–∞–¥—ñ '{rest_name}'")
                    self.show_price_popup(rest_name)
                else:
                    self.output = f"–ü–æ—Ç–æ—á–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: {self.total:.2f} –≥—Ä–Ω\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ù–∞—Å—Ç—É–ø–Ω–∏–π –∑–∞–∫–ª–∞–¥', —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏."
                    self.dishes_to_enter = []
                    self.current_dish_index = 0
            except:
                ti.text = ''
                self.output = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É —Ü—ñ–Ω—É (–Ω–µ –≤—ñ–¥‚Äô—î–º–Ω—É)."

        btn_ok.bind(on_press=on_ok)
        popup.open()

    def restart(self):
        self.reset_fest()


class FestApp(App):
    def build(self):
        self.title = "–°–≤—è—Ç–∫–æ–≤–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π"
        return FestScreen()


if __name__ == "__main__":
    FestApp().run()
